# Remove outliers
clean_ev_data <- clean_ev_data %>% filter(Electric.Range >= (Q1 - 1.5 * IQR) & Electric.Range <= (Q3 + 1.5 * IQR))
# Apply Min-Max Scaling to Electric Range
clean_ev_data$Electric_Range_Norm <- normalizeMinMax(clean_ev_data$Electric.Range)
# Apply Min-Max Scaling to Electric Range
clean_mydata$Electric_Range_Norm <- normalizeMinMax(clean_mydata$Electric.Range)
# Apply Min-Max Scaling to Electric Range
clean_mydata$Electric_Range_Norm <- normalizeMinMax(clean_mydata$Electric.Range)
# PART 5: Data Visualization
# Histogram of Electric Range (Original Data)
p1 <- ggplot(clean_mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
# Remove rows with missing values
clean_mydata <- na.omit(mydata)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# Standardization Function
normalizeStandardized <- function(x) {
return ((x - mean(x)) / sd(x))
}
# PART 5: Data Visualization
# Histogram of Electric Range (Original Data)
p1 <- ggplot(clean_mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
# Arrange histograms in a grid
grid.arrange(p1, p2, p3, nrow = 1, ncol = 3)
# PART 5: Data Visualization
# Histogram of Electric Range (Original Data)
p1 <- ggplot(clean_mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
# Histogram of Electric Range (Min-Max Scaled)
p2 <- ggplot(clean_mydata, aes(x = Electric_Range_Norm)) +
geom_histogram(binwidth = 0.1, fill = "green", color = "black") +
labs(title = "Histogram of Electric Range (Min-Max Scaled)")
# Histogram of Electric Range (Standardized)
p3 <- ggplot(clean_mydata, aes(x = Electric_Range_Std)) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black") +
labs(title = "Histogram of Electric Range (Standardized)")
# Arrange histograms in a grid
grid.arrange(p1, p2, p3, nrow = 1, ncol = 3)
# Apply Min-Max Scaling to Electric Range
clean_mydata$Electric_Range_Norm <- normalizeMinMax(clean_mydata$Electric.Range)
head(clean_mydata)
# Preview the dataset
head(mydata)
# load dataset
mydata <- read.csv("Electric_Vehicle_Population_Data .csv", stringsAsFactors = FALSE)
mydata <- cars
View(mydata)
# Preview the dataset
head(mydata)
# load dataset
mydata <- read.csv("Electric_Vehicle_Population_Data .csv", stringsAsFactors = FALSE)
mydata <- cars
View(mydata)
# Preview the dataset
head(mydata)
# Preview the dataset
head(iris)
# set Dir
setwd("C:/Users/STUDENT/Desktop/COLLEGE/COLLEGE REPOSITORY/YEAR-4/CLASSES YEAR 4/7th -SEMESTER/01-DATA EXPLORATION/WEEK 3")
# Load the required libraries
install.packages("ggplot2")
install.packages("robustbase")
install.packages("gridExtra")
library(ggplot2)
library(robustbase)
library(gridExtra)
# Create subset of "cars"
iris <- read.csv(file = "iris-dataset.csv", stringsAsFactors =
FALSE)
# Preview the dataset
head(iris)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
#p1
iris_minmax <- iris
iris_minmax[, 2:4] <- apply(iris[, 2:4], 2, normalizeMinMax)
# Standardization
normalizeStandardized <- function(x) {
return ((x - mean(x)) / sd(x))
}
iris_standardized <- iris
iris_standardized[, 1:4] <- apply(iris[, 1:4], 2, normalizeStandardized)
# Robust Scaling (Robust Standardization)
iris_robust <- iris
iris_robust[, 1:4] <- scale(iris[, 1:4], center = TRUE, scale = TRUE)
# Create histograms for the original and scaled data
options(repr.plot.width = 12, repr.plot.height = 4)
# Original Data
p1 <- ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black") +
labs(title = "Histogram of Sepal Length (Original Data)")
p2 <- ggplot(iris_minmax, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.2, fill = "green", color = "black") +
labs(title = "Histogram of Sepal Length (Min-Max Scaled)")
p3 <- ggplot(iris_standardized, aes(x = Sepal.Length)) + geom_histogram(binwidth = 0.2, fill = "red", color = "black") +
labs(title = "Histogram of Sepal Length (Standardized)")
p4 <- ggplot(iris_robust, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.2, fill = "purple", color = "black") +
labs(title = "Histogram of Sepal Length (Robust Scaled)")
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
#sepal width
p1 <- ggplot(iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black") +
labs(title = "Histogram of Sepal Length (Original Data)")
p2 <- ggplot(iris_minmax, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, fill = "green", color = "black") +
labs(title = "Histogram of Sepal Length (Min-Max Scaled)")
p3 <- ggplot(iris_standardized, aes(x = Sepal.Width)) + geom_histogram(binwidth = 0.2, fill = "red", color = "black") +
labs(title = "Histogram of Sepal Length (Standardized)")
p4 <- ggplot(iris_robust, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, fill = "purple", color = "black") +
labs(title = "Histogram of Sepal Length (Robust Scaled)")
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
# View (use capital )
View(iris)
# View
View(iris_minmax)
#petal width
p1 <- ggplot(iris, aes(x = Petal.Width)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black") +
labs(title = "Histogram of Sepal Length (Original Data)")
p2 <- ggplot(iris_minmax, aes(x = Petal.Width)) +
geom_histogram(binwidth = 0.2, fill = "green", color = "black") +
labs(title = "Histogram of Sepal Length (Min-Max Scaled)")
p3 <- ggplot(iris_standardized, aes(x = Petal.Width)) + geom_histogram(binwidth = 0.2, fill = "red", color = "black") +
labs(title = "Histogram of Sepal Length (Standardized)")
p4 <- ggplot(iris_robust, aes(x = Petal.Width)) +
geom_histogram(binwidth = 0.2, fill = "purple", color = "black") +
labs(title = "Histogram of Sepal Length (Robust Scaled)")
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
#HISTOGRAM PLOT
p1 <- ggplot(iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black") +
labs(title = "Histogram of Sepal Length (Original Data)")
p2 <- ggplot(iris_minmax, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, fill = "green", color = "black") +
labs(title = "Histogram of Sepal Length (Min-Max Scaled)")
p3 <- ggplot(iris_standardized, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, fill = "red", color = "black") +
labs(title = "Histogram of Sepal Length (Standardized)")
p4 <- ggplot(iris_robust, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, fill = "purple", color = "black") +
labs(title = "Histogram of Sepal Length (Robust Scaled)")
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
#SCATTER plot
p1 <- ggplot(iris, aes(x = Sepal.Width,  y = Sepal.Length)) + geom_point(color = "blue") +
labs(title = "Histogram of Sepal Length (Original Data)")
p2 <- ggplot(iris_minmax, aes(x = Sepal.Width,  y = Sepal.Length)) +
geom_point(color = "black") +
labs(title = "Histogram of Sepal Length (Min-Max Scaled)")
p3 <- ggplot(iris_standardized, aes(x = Sepal.Width,  y = Sepal.Length)) +
geom_point(color = "red") +
labs(title = "Histogram of Sepal Length (Standardized)")
p4 <- ggplot(iris_robust, aes(x = Sepal.Width,  y = Sepal.Length)) +
geom_point(color = "purple") +
labs(title = "Histogram of Sepal Length (Robust Scaled)")
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
#TUTORIAL  = FINISHED
# Scatter plot
scatter_plot <- ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "black") +
labs(title = "Scatter Plot of Sepal Width vs Sepal Length (Original Data)")
#petal width
histogram_plot <- ggplot(iris, aes(x = Petal.Width)) +
geom_histogram(binwidth = 0.2, fill = "yellow", color = "black") +
labs(title = "Histogram of Sepal Length (Original Data)")
# Scatter plot
scatter_plot2 <- ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "blue") +
labs(title = "Scatter Plot of Sepal Width vs Sepal Length (Original Data)")
#petal width
histogram_plot2 <- ggplot(iris, aes(x = Petal.Width)) +
geom_histogram(binwidth = 0.2, fill = "red", color = "black") +
labs(title = "Histogram of Sepal Length (Original Data)")
grid.arrange(scatter_plot, histogram_plot, scatter_plot2, histogram_plot2, nrow = 2, ncol = 2)
install.packages("ggplot2")
install.packages("ggplot2")
# load dataset
mydata <- read.csv("Electric_Vehicle_Population_Data .csv", stringsAsFactors = FALSE)
getwd()
# set Dir
setwd("C:/Users/STUDENT/Desktop/COLLEGE/COLLEGE REPOSITORY/YEAR-4/CLASSES YEAR 4/7th -SEMESTER/01-DATA EXPLORATION/CAs/data_exploration_and_preparation_CA1")
# loading libraries
install.packages("ggplot2")
install.packages("dplyr")
install.packages("gridExtra")
library(ggplot2)
library(dplyr)
library(gridExtra)
install.packages("dplyr")
install.packages("gridExtra")
install.packages("ggplot2")
# load dataset
mydata <- read.csv("Electric_Vehicle_Population_Data .csv", stringsAsFactors = FALSE)
mydata <- cars
View(mydata)
# load dataset
mydata <- read.csv("Electric_Vehicle_Population_Data .csv", stringsAsFactors = FALSE)
mydata <- cars
View(mydata)
# Preview the dataset
head(mydata)
iris_minmax <- mydata
iris_minmax[, 2:4] <- apply(mydata[, 2:4], 2, normalizeMinMax)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
mydata_minmax <- mydata
mydata_minmax$Electric.Range.Norm <- normalizeMinMax(mydata$Electric.Range)
# Standardization
normalizeStandardized <- function(x) {
return ((x - mean(x)) / sd(x))
}
mydata_standardized <- mydata
mydata_standardized$Electric.Range.Std <- normalizeStandardized(mydata$Electric.Range)
# Robust Scaling
mydata_robust <- mydata
mydata_robust$Electric.Range.Robust <- scale(mydata$Electric.Range, center = TRUE, scale = TRUE)
# Histograms for Electric Range
p1 <- ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
p2 <- ggplot(mydata_minmax, aes(x = Electric.Range.Norm)) +
geom_histogram(binwidth = 0.1, fill = "green", color = "black") +
labs(title = "Histogram of Electric Range (Min-Max Scaled)")
p3 <- ggplot(mydata_standardized, aes(x = Electric.Range.Std)) +
geom_histogram(binwidth = 0.1, fill = "red", color = "black") +
labs(title = "Histogram of Electric Range (Standardized)")
p4 <- ggplot(mydata_robust, aes(x = Electric.Range.Robust)) +
geom_histogram(binwidth = 0.1, fill = "purple", color = "black") +
labs(title = "Histogram of Electric Range (Robust Scaled)")
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
# Scatter plot example: Electric Range vs Model Year
scatter_plot <- ggplot(mydata, aes(x = Model.Year, y = Electric.Range)) +
geom_point(color = "black") +
labs(title = "Scatter Plot of Electric Range vs Model Year")
# Display the scatter plot
print(scatter_plot)
# Histogram for original data
ggplot(clean_mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
# Histogram for original data
ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
# Structure of the dataset
str(mydata)
# Structure of the dataset
str(mydata)
# Check for missing values
sum(is.na(mydata))
# Remove missing values
clean_mydata <- na.omit(mydata)
# Boxplot to detect outliers in Electric Range
boxplot(clean_mydata$Electric.Range)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
mydata_minmax <- mydata
mydata_minmax$Electric.Range.Norm <- normalizeMinMax(mydata$Electric.Range)
# Standardization
normalizeStandardized <- function(x) {
return ((x - mean(x)) / sd(x))
}
# Remove missing values
clean_mydata <- na.omit(mydata)
mydata_minmax <- cleaned_mydata
mydata_minmax <- cleaned_mydata
# Remove missing values
cleaned_mydata <- na.omit(mydata)
# Preview the dataset
head(cleaned_mydata)
# Preview the dataset
head(mydata)
# Preview the dataset
head(cleaned_mydata)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
mydata_minmax <- cleaned_mydata
mydata_minmax$Electric.Range.Norm <- normalizeMinMax(cleaned_mydata$Electric.Range)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
mydata_minmax <- cleaned_mydata
mydata_minmax$Electric.Range.Norm <- normalizeMinMax(cleaned_mydata$Electric.Range)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
mydata_minmax <- mydata
mydata_minmax$Electric.Range.Norm <- normalizeMinMax(mydata$Electric.Range)
boxplot(mydata$Electric.Range, main="Boxplot for Electric Range")
# Check for missing values
missing_values <- sum(is.na(mydata))
print(paste("Total missing values:", missing_values))
# Remove missing values (if necessary)
cleaned_mydata <- na.omit(mydata)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cleaned_mydata$Electric.Range.Norm <- normalizeMinMax(cleaned_mydata$Electric.Range)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cleaned_mydata$Electric.Range.Norm <- normalizeMinMax(cleaned_mydata$Electric.Range)
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
mydata_minmax <- mydata
mydata_minmax$Electric.Range.Norm <- normalizeMinMax(mydata$Electric.Range)
# Display the scatter plot
print(scatter_plot)
ggplot(mydata, aes(x = CategoricalFeature, y = Electric.Range)) +
geom_boxplot() +
labs(title = "Boxplot of Electric Range by Categorical Feature")
correlation_matrix <- cor(mydata)
ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range")
# scatter plot for covariation
ggplot(mydata, aes(x = Model.Year, y = Electric.Range)) +
geom_point(color = "black") +
labs(title = "Scatter Plot of Electric Range vs Model Year")
# scatter plot for covariation
ggplot(mydata, aes(y = Electric.Range)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Boxplot of Electric Range")
#-----------   QUESTION 2: DATA ANALYSIS (EDA)  --------------------------------
# histogram plot for Variations in Feature
ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range")
#-----------   QUESTION 1: PREPARING DATASET + TECHNIQUES  -------------
# commit test
# get Dir
getwd()
# set Dir
setwd("C:/Users/STUDENT/Desktop/COLLEGE/COLLEGE REPOSITORY/YEAR-4/CLASSES YEAR 4/7th -SEMESTER/01-DATA EXPLORATION/CAs/data_exploration_and_preparation_CA1")
# loading libraries
install.packages("ggplot2")
install.packages("dplyr")
install.packages("gridExtra")
library(ggplot2)
library(dplyr)
library(gridExtra)
# load dataset
mydata <- read.csv("Electric_Vehicle_Population_Data .csv", stringsAsFactors = FALSE)
mydata <- cars
View(mydata)
# Preview the dataset
head(mydata)
# Check the dimensions of the my data
dim(mydata)
# Structure of the dataset
str(mydata)
# Check for missing values
missing_values <- sum(is.na(mydata))
print(paste("Total missing values:", missing_values))
#https://www.geeksforgeeks.org/outlier-analysis-in-r/
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
mydata_minmax <- mydata
mydata_minmax$Electric.Range.Norm <- normalizeMinMax(mydata$Electric.Range)
# Standardization
normalizeStandardized <- function(x) {
return ((x - mean(x)) / sd(x))
}
mydata_standardized <- mydata
mydata_standardized$Electric.Range.Std <- normalizeStandardized(mydata$Electric.Range)
# Robust Scaling
mydata_robust <- mydata
mydata_robust$Electric.Range.Robust <- scale(mydata$Electric.Range, center = TRUE, scale = TRUE)
# Histograms for Electric Range
p1 <- ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
p2 <- ggplot(mydata_minmax, aes(x = Electric.Range.Norm)) +
geom_histogram(binwidth = 0.1, fill = "green", color = "black") +
labs(title = "Histogram of Electric Range (Min-Max Scaled)")
p3 <- ggplot(mydata_standardized, aes(x = Electric.Range.Std)) +
geom_histogram(binwidth = 0.1, fill = "red", color = "black") +
labs(title = "Histogram of Electric Range (Standardized)")
p4 <- ggplot(mydata_robust, aes(x = Electric.Range.Robust)) +
geom_histogram(binwidth = 0.1, fill = "purple", color = "black") +
labs(title = "Histogram of Electric Range (Robust Scaled)")
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
# Scatter plot example: Electric Range vs Model Year
scatter_plot <- ggplot(mydata, aes(x = Model.Year, y = Electric.Range)) +
geom_point(color = "black") +
labs(title = "Scatter Plot of Electric Range vs Model Year")
# Display the scatter plot
print(scatter_plot)
# Histogram for original data
ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
#-----------   QUESTION 2: DATA ANALYSIS (EDA)  --------------------------------
# histogram plot for Variations in Feature
ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range")
# scatter plot for covariation
ggplot(mydata, aes(x = Model.Year, y = Electric.Range)) +
geom_point(color = "black") +
labs(title = "Scatter Plot of Electric Range vs Model Year")
# scatter plot for covariation
ggplot(mydata, aes(y = Electric.Range)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Boxplot of Electric Range")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("dplyr")
#-----------   QUESTION 1: PREPARING DATASET + TECHNIQUES  -------------
# commit test
# get Dir
getwd()
# set Dir
setwd("C:/Users/STUDENT/Desktop/COLLEGE/COLLEGE REPOSITORY/YEAR-4/CLASSES YEAR 4/7th -SEMESTER/01-DATA EXPLORATION/CAs/data_exploration_and_preparation_CA1")
# loading libraries
install.packages("ggplot2")
install.packages("dplyr")
install.packages("gridExtra")
library(ggplot2)
library(dplyr)
library(gridExtra)
# load dataset
mydata <- read.csv("Electric_Vehicle_Population_Data .csv", stringsAsFactors = FALSE)
mydata <- cars
View(mydata)
# Preview the dataset
head(mydata)
# Check the dimensions of the my data
dim(mydata)
# Structure of the dataset
str(mydata)
# Check for missing values
missing_values <- sum(is.na(mydata))
print(paste("Total missing values:", missing_values))
#https://www.geeksforgeeks.org/outlier-analysis-in-r/
# Min-Max Scaling
normalizeMinMax <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
mydata_minmax <- mydata
mydata_minmax$Electric.Range.Norm <- normalizeMinMax(mydata$Electric.Range)
# Standardization
normalizeStandardized <- function(x) {
return ((x - mean(x)) / sd(x))
}
mydata_standardized <- mydata
mydata_standardized$Electric.Range.Std <- normalizeStandardized(mydata$Electric.Range)
# Robust Scaling
mydata_robust <- mydata
mydata_robust$Electric.Range.Robust <- scale(mydata$Electric.Range, center = TRUE, scale = TRUE)
# Histograms for Electric Range
p1 <- ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
p2 <- ggplot(mydata_minmax, aes(x = Electric.Range.Norm)) +
geom_histogram(binwidth = 0.1, fill = "green", color = "black") +
labs(title = "Histogram of Electric Range (Min-Max Scaled)")
p3 <- ggplot(mydata_standardized, aes(x = Electric.Range.Std)) +
geom_histogram(binwidth = 0.1, fill = "red", color = "black") +
labs(title = "Histogram of Electric Range (Standardized)")
p4 <- ggplot(mydata_robust, aes(x = Electric.Range.Robust)) +
geom_histogram(binwidth = 0.1, fill = "purple", color = "black") +
labs(title = "Histogram of Electric Range (Robust Scaled)")
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
# Scatter plot example: Electric Range vs Model Year
scatter_plot <- ggplot(mydata, aes(x = Model.Year, y = Electric.Range)) +
geom_point(color = "black") +
labs(title = "Scatter Plot of Electric Range vs Model Year")
# Display the scatter plot
print(scatter_plot)
# Histogram for original data
ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range (Original Data)")
#-----------   QUESTION 2: DATA ANALYSIS (EDA)  --------------------------------
# histogram plot for Variations in Feature
ggplot(mydata, aes(x = Electric.Range)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = "Histogram of Electric Range")
# scatter plot for covariation
ggplot(mydata, aes(x = Model.Year, y = Electric.Range)) +
geom_point(color = "black") +
labs(title = "Scatter Plot of Electric Range vs Model Year")
# scatter plot for covariation
ggplot(mydata, aes(y = Electric.Range)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Boxplot of Electric Range")
